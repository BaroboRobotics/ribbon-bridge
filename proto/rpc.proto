import "nanopb.proto";
package com.barobo.rpc;

message Version {
    required uint32 major = 1;
    required uint32 minor = 2;
    required uint32 patch = 3;
}

message Request {
    message Component {
        message Invocation {
            required bytes payload = 1 [(nanopb).max_size = 128];
        }

        message Subscription {
            enum Type {
                SUBSCRIBE = 1;
                UNSUBSCRIBE = 2;
            }
            required Type type = 1;
        }

        required fixed32 id = 1;

        optional Invocation invocation = 2;
        optional Subscription subscription = 3;
    }

    message Status {
        required Version rpcVersion = 1;
        required Version interfaceVersion = 2;
    }

    required uint32 id = 1;
    optional Component component = 2;
    optional Status status = 3;
}

message Reply {
    message Invocation {
        enum Type {
            OUTPUT = 1;
            ERROR = 2;
        }
        required Type type = 1;
        required bytes payload = 2 [(nanopb).max_size = 128];
    }

    enum Error {
        BUFFER_OVERFLOW = 1;
        BAD_PAYLOAD = 2;
        NO_SUCH_COMPONENT = 3;
        ILLEGAL_OPERATION = 4;
        READ_ONLY = 5;
        NO_SUBSCRIPTIONS = 6;
    }

    message Status {
        required Version version = 1;
    }

    required uint32 inReplyToRequestId = 1;
    optional Invocation invocatoin = 2;
    optional Error error = 3;
    optional Status status = 4;
}

message Broadcast {
    required uint32 id = 1;
    required bytes payload = 2 [(nanopb).max_size = 128];
}
